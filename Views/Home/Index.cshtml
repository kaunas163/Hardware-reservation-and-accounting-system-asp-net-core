@using HardwareReservationAndAccountingSystem.ViewsModels.Home;
@using HardwareReservationAndAccountingSystem.ViewsModels.Reservations;
@model HomeViewModel

@{
    ViewData["Title"] = "Pradžia";
}

@section PageHeaderTitle {
    <h2>Techninės įrangos rezervacija</h2>
}

<div class="row home-page align-items-start">
    <div class="col-md-5 col-sm-12 add-margin">
        <div class="row">
            <div class="col add-margin">
                <div class="content-block">
                    <div class="title with-edit less-margin">
                        <h3>@Html.ActionLink("Pranešimai", "Index", "Notifications")</h3>
                        <div class="edit-actions">
                            <button type="button" class="btn btn-link" data-toggle="modal" data-target="#newNotificationModal"><i class="fas fa-pencil-alt"></i></button>
                        </div>
                    </div>
                    <div class="content">
                        @if (Model.Notifications.Any())
                        {
                            @foreach (var notification in Model.Notifications)
                            {
                                var newNotification = notification.NotificationsForUsers.Any(x => !x.IsRead) ? "new" : "";

                                <p class="@newNotification">
                                    <a href="@Url.Action("Details", "Notifications", new { id = notification.Id })">
                                        <span>@notification.CreatedOn</span>
                                        @notification.Title
                                    </a>
                                </p>
                            }
                        }
                        else
                        {
                            <p>Jums skirtų pranešimų nėra.</p>
                        }
                        <!-- <p class="new"><a href="@Url.Action("Details", "Notifications")"><span>2019-03-16 21:10</span> Jūsų rezervacijos būsena įrangai "Komplektas renginio filmavimui" buvo patvirtinta.</a></p> -->
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col add-margin">
                <div class="content-block">
                    <div class="title with-edit less-margin">
                        <h3>@Html.ActionLink("Renginiai", "Index", "Events")</h3>
                        <div class="edit-actions">
                            <button type="button" class="btn btn-link" data-toggle="modal" data-target="#newEventModal"><i class="fas fa-pencil-alt"></i></button>
                        </div>
                    </div>
                    <div class="content">
                        @if (Model.Events.Any())
                        {
                            var now = DateTime.Now;

                            @foreach (var e in Model.Events)
                            {
                                var currentEvent = e.StartTime <= now && now <= e.EndTime ? "current" : "";

                                <p class="@currentEvent">
                                    <a href="@Url.Action("Details", "Events", new { id = e.Id })">
                                        <span>@e.StartTime</span>
                                        @e.Title
                                    </a>
                                </p>
                            }
                        }
                        else
                        {
                            <p>Šiuo metu sukurtų renginių nėra.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-7 col-sm-12 add-margin">
        <div class="content-block">
            <div class="title with-edit">
                <h3>@Html.ActionLink("Rezervacijos", "Index", "Reservations")</h3>
                <div class="edit-actions">
                    <button type="button" class="btn btn-link" data-toggle="modal" data-target="#newReservationModal"><i class="fas fa-pencil-alt"></i></button>
                </div>
            </div>
            <div class="content">
                @if (Model.ReservationsNewest.Any() || Model.ReservationsToday.Any() || Model.ReservationsWeek.Any() || Model.ReservationsOld.Any())
                {
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="newest-tab" data-toggle="tab" href="#newest" role="tab" aria-controls="newest" aria-selected="true">Naujausios</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="todays-tab" data-toggle="tab" href="#todays" role="tab" aria-controls="todays" aria-selected="false">Šiandienos</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="week-tab" data-toggle="tab" href="#week" role="tab" aria-controls="week" aria-selected="false">Savaitės</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="old-tab" data-toggle="tab" href="#old" role="tab" aria-controls="old" aria-selected="false">Praėjusios</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="newest" role="tabpanel" aria-labelledby="newest-tab">
                            @if (Model.ReservationsNewest.Any())
                            {
                                @await Html.PartialAsync("~/Views/Home/_ReservationsTabContent.cshtml", Model.ReservationsNewest)
                            }
                            else
                            {
                                <p>Nėra naujų rezervacijų.</p>
                            }
                        </div>
                        <div class="tab-pane fade" id="todays" role="tabpanel" aria-labelledby="todays-tab">
                            @if (Model.ReservationsToday.Any())
                            {
                                @await Html.PartialAsync("~/Views/Home/_ReservationsTabContent.cshtml", Model.ReservationsToday)
                            }
                            else
                            {
                                <p>Šiandienai nėra sukurtų rezervacijų.</p>
                            }
                        </div>
                        <div class="tab-pane fade" id="week" role="tabpanel" aria-labelledby="week-tab">
                            @if (Model.ReservationsWeek.Any())
                            {
                                @await Html.PartialAsync("~/Views/Home/_ReservationsTabContent.cshtml", Model.ReservationsWeek)
                            }
                            else
                            {
                                <p>Šiai savaitei nėra sukurtų rezervacijų.</p>
                            }
                        </div>
                        <div class="tab-pane fade" id="old" role="tabpanel" aria-labelledby="old-tab">
                            @if (Model.ReservationsOld.Any())
                            {
                                @await Html.PartialAsync("~/Views/Home/_ReservationsTabContent.cshtml", Model.ReservationsOld)
                            }
                            else
                            {
                                <p>Nėra jokių praėjusių rezervacijų.</p>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <p>Šiuo metu jūsų, ar jums prieinamų rezervacijų nėra.</p>
                }
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Notifications/_ModalNew.cshtml")
@await Html.PartialAsync("~/Views/Events/_ModalNew.cshtml", new Event())
@await Html.PartialAsync("~/Views/Reservations/_ModalNew.cshtml", new ReservationNewOrUpdate { Reservation = new Reservation(), EquipmentBundles = Model.EquipmentBundles })
