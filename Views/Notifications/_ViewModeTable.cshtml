@using Microsoft.AspNetCore.Identity;
@using HardwareReservationAndAccountingSystem.Models;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model List<Notification>

<div class="row view-mode-content-block" :class="tableViewMode">
    <div class="col-md-12 add-margin">
        <div class="content-block">
            <div class="title">
                <h3>Pranešimai</h3>
            </div>
            <div class="content">
                <div class="flex-table styled-table">
                    <div class="headings">
                        <p>Pranešimo būsena <i class="fas fa-sort"></i></p>
                        <p>Sukūrimo laikas <i class="fas fa-sort"></i></p>
                        <p>Žinutės tekstas <i class="fas fa-sort"></i></p>
                        <p>Pranešimo tipas <i class="fas fa-sort"></i></p>
                        <p>Pranešimą sukūrė <i class="fas fa-sort"></i></p>
                        <p>Kam skirtas <i class="fas fa-sort"></i></p>
                    </div>
                    @foreach (var notification in Model)
                    {
                        var newNotification = notification.NotificationsForUsers.Where(u => u.UserId == UserManager.GetUserId(User)).Any(x => !x.IsRead);

                        <div class="data-row @(newNotification ? "notification-new" : "")">
                            <p class="notification-status @(newNotification ? "new" : "read")">
                                @Html.ActionLink(newNotification ? "Naujas" : "Skaitytas", "Details", "Notifications", new { id = notification.Id })
                            </p>
                            <p>@Html.ActionLink(notification.CreatedOn.ToString(), "Details", "Notifications", new { id = notification.Id })</p>
                            <p>@Html.ActionLink(notification.Title, "Details", "Notifications", new { id = notification.Id })</p>
                            <p>@Html.ActionLink(notification.NotificationType.Title, "Details", "Notifications", new { id = notification.Id })</p>
                            @if (notification.SenderId != null && !string.IsNullOrWhiteSpace(notification.SenderId))
                            {
                                <p>@Html.ActionLink(notification.Sender.UserName, "Details", "Users", new { id = notification.SenderId })</p>
                            }
                            else
                            {
                                <p>Pranešimą sukūrė sistema</p>
                            }
                            @if (notification.NotificationsForUsers.Count == 1)
                            {
                                var userDetails = notification.NotificationsForUsers.FirstOrDefault().User;
                                var toWhom = string.Format("{0} {1}", userDetails.Name, userDetails.Surname);
                                <p>@Html.ActionLink(toWhom, "Details", "Users", new { id = userDetails.Id })</p>
                            }
                            else
                            {
                                <p>@Html.ActionLink("Keliems vartotojams", "Index", "Users")</p>
                            }
                        </div>
                     }
                </div>
            </div>
        </div>
    </div>
</div>
