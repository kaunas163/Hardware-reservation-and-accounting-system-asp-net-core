@using HardwareReservationAndAccountingSystem.Enums;
@using HardwareReservationAndAccountingSystem.Models;
@model Reservation

@functions {
    public string StatusClassName(ReservationStatus status)
    {
        switch (status)
        {
            case ReservationStatus.Pending:
                return "waiting-approval";
            case ReservationStatus.Confirmed:
                return "approved";
            case ReservationStatus.Cancelled:
                return "canceled";
            case ReservationStatus.Active:
                return "in-progress";
            case ReservationStatus.Untaken:
                return "";
            case ReservationStatus.Completed:
                return "old";
            case ReservationStatus.Late:
                return "late";
            case ReservationStatus.Stolen:
                return "stolen";
            case ReservationStatus.Broken:
                return "";
            case ReservationStatus.Undefined:
                return "";
            default:
                return "";
        }
    }

    public string StatusTitle(ReservationStatus status)
    {
        switch (status)
        {
            case ReservationStatus.Pending:
                return "Laukianti patvirtinimo";
            case ReservationStatus.Confirmed:
                return "Patvirtinta";
            case ReservationStatus.Cancelled:
                return "Atšaukta";
            case ReservationStatus.Active:
                return "Vykdoma";
            case ReservationStatus.Untaken:
                return "Neatsiimta";
            case ReservationStatus.Completed:
                return "Įvykdyta";
            case ReservationStatus.Late:
                return "Vėluojanti";
            case ReservationStatus.Stolen:
                return "Įranga pavogta";
            case ReservationStatus.Broken:
                return "Įranga apgadinta";
            case ReservationStatus.Undefined:
                return "Neapibrėžta";
            default:
                return "";
        }
    }
}

@{
    ViewData["Title"] = "Rezervacijos informacija";
}

@section PageHeaderTitle {
    <h2>Rezervacijos informacija</h2>
}

@section PageHeaderSubNavLinks {
    <a href="@Url.Action("Index", "Reservations")" class="btn btn-dark"><i class="fas fa-calendar-check"></i> Visos rezervacijos</a>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exportModal"><i class="fas fa-download"></i> Eksportuoti</button>
    <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#editModal"><i class="far fa-edit"></i> Atnaujinti</button>
    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#newReservationModal"><i class="fas fa-pencil-alt"></i> Sukurti naują</button>
}

<div class="row">
    <div class="col-md-12 add-margin">
        <div class="content-block">
            <div class="title with-edit">
                <h3>Pagrindinė informacija</h3>
                <div class="edit-actions">
                    <button type="button" class="btn btn-link" data-toggle="modal" data-target="#editMainInfoModal"><i class="far fa-edit"></i></button>
                </div>
            </div>
            <div class="content base-info">
                <div class="row">
                    <div class="col-md-2"><p>Rezervacijos laikotarpis:</p></div>
                    <div class="col-md-10"><p>@Model.StartTime - @Model.EndTime</p></div>
                </div>
                <div class="row">
                    <div class="col-md-2"><p>Sukūrimo laikas:</p></div>
                    <div class="col-md-10"><p>@Model.CreatedOn</p></div>
                </div>
                @if (Model.CreatedOn != Model.UpdatedOn)
                {
                    <div class="row">
                        <div class="col-md-2"><p>Atnaujinimo laikas:</p></div>
                        <div class="col-md-10"><p>@Model.UpdatedOn</p></div>
                    </div>
                }
                <div class="row">
                    <div class="col-md-2"><p>Užsakovas:</p></div>
                    <div class="col-md-10"><p>@Html.ActionLink(String.Format("{0} {1}", Model.Customer.Name, Model.Customer.Surname), "Details", "Users", new { id = Model.Customer.Id })</p></div>
                </div>
                @if (Model.EventId != null)
                {
                    <div class="row">
                        <div class="col-md-2"><p>Renginys:</p></div>
                        <div class="col-md-10"><p>@Html.ActionLink(Model.Event.Title, "Details", "Events", new { id = Model.Event.Id })</p></div>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Comment))
                {
                    <div class="row">
                        <div class="col-md-2"><p>Komentaras:</p></div>
                        <div class="col-md-10"><p>@Model.Comment</p></div>
                    </div>
                }
                <div class="row">
                    <div class="col-md-2"><p>Rezervacijos būsena:</p></div>
                    <div class="col-md-10">
                        <p class="reservation @StatusClassName(Model.Status)">
                            <a href="#" data-toggle="modal" data-target="#editStatusModal">@StatusTitle(Model.Status) <i class="far fa-edit"></i></a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 add-margin">
        <div class="content-block">
            <div class="title with-edit less-margin">
                <h3>@Html.ActionLink("Rezervuotas įrangos komplektas: " + Model.EquipmentBundle.Title, "Details", "EquipmentBundles", new { id = Model.EquipmentBundle.Id })</h3>
                <div class="edit-actions">
                    <button type="button" class="btn btn-link" data-toggle="modal" data-target="#editEquipmentBundleModal"><i class="far fa-edit"></i></button>
                </div>
            </div>
            <div class="content">
                @if (!string.IsNullOrWhiteSpace(Model.EquipmentBundle.Description))
                {
                    <div class="row">
                        <div class="col">
                            <p>
                                @Model.EquipmentBundle.Description
                            </p>
                        </div>
                    </div>
                }
                @if (Model.EquipmentBundle.EquipmentsInBundles.Any())
                {
                    <div class="row">
                        @foreach (var equipment in Model.EquipmentBundle.EquipmentsInBundles.Select(x => x.Equipment))
                        {
                            <div class="col-md-3 small-equipment-block add-margin">
                                <a href="@Url.Action("Details", "Equipments", new { id = equipment.Id })">
                                    <img src="http://via.placeholder.com/500x250">
                                </a>
                                <h4><a href="@Url.Action("Details", "Equipments", new { id = equipment.Id })">@equipment.Title</a></h4>
                                @if (!string.IsNullOrWhiteSpace(equipment.Description))
                                {
                                    string description;

                                    if (equipment.Description.Length > 100)
                                    {
                                        description = equipment.Description.Substring(0, 100) + "...";
                                    }
                                    else
                                    {
                                        description = equipment.Description;
                                    }
                                    <p>@description</p>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-12 add-margin">
        <div class="content-block">
            <div class="title">
                <h3>Kalendorius</h3>
            </div>
            <div class="content">
                <Calendar />
            </div>
        </div>
    </div>
    <div class="col-md-12 add-margin">
        <div class="content-block">
            <div class="title">
                <h3>Rezervacijos istorija</h3>
            </div>
            <div class="content">
                <p>lentelė arba sąrašas su pasikeitimais ir kada jie įvyko</p>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Reservations/_ModalExport.cshtml")
@await Html.PartialAsync("~/Views/Reservations/_ModalNew.cshtml")
@await Html.PartialAsync("~/Views/Reservations/_ModalEditStatus.cshtml")
@await Html.PartialAsync("~/Views/Reservations/_ModalEditMainInfo.cshtml")
@await Html.PartialAsync("~/Views/Reservations/_ModalEdit.cshtml")
@await Html.PartialAsync("~/Views/Reservations/_ModalEditEquipmentBundle.cshtml")
